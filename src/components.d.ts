/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface VActionsheet {
    }
    interface VButton {
        "conner": boolean;
        "outline": boolean;
        "rounder": boolean;
        "type": string;
    }
    interface VCalendar {
    }
    interface VCheckbox {
    }
    interface VCheckboxGroup {
    }
    interface VCol {
        "span": number;
    }
    interface VCollapse {
    }
    interface VCollapseItem {
    }
    interface VDialog {
    }
    interface VDropdown {
    }
    interface VForm {
    }
    interface VFormItem {
    }
    interface VIcon {
        "color": string;
        "name": string;
        "path": string;
        "size": number;
        "view": number;
    }
    interface VInput {
    }
    interface VKeyboard {
    }
    interface VList {
    }
    interface VMask {
    }
    interface VNavbar {
    }
    interface VNotify {
    }
    interface VPage {
    }
    interface VPanel {
    }
    interface VPopover {
    }
    interface VPopup {
    }
    interface VRadio {
        "check": (val: any) => Promise<void>;
        "checked": boolean;
        "val": () => Promise<string>;
        "value": string;
    }
    interface VRadioGroup {
        "val": () => Promise<any>;
        "value": any;
    }
    interface VRange {
    }
    interface VRate {
    }
    interface VRow {
        "gutter": number;
    }
    interface VScrollView {
    }
    interface VSpace {
    }
    interface VSticky {
    }
    interface VSwiper {
    }
    interface VSwiperItem {
    }
    interface VSwitch {
    }
    interface VTab {
    }
    interface VTabbar {
    }
    interface VTable {
    }
    interface VText {
    }
    interface VTitle {
    }
    interface VToast {
    }
}
declare global {
    interface HTMLVActionsheetElement extends Components.VActionsheet, HTMLStencilElement {
    }
    var HTMLVActionsheetElement: {
        prototype: HTMLVActionsheetElement;
        new (): HTMLVActionsheetElement;
    };
    interface HTMLVButtonElement extends Components.VButton, HTMLStencilElement {
    }
    var HTMLVButtonElement: {
        prototype: HTMLVButtonElement;
        new (): HTMLVButtonElement;
    };
    interface HTMLVCalendarElement extends Components.VCalendar, HTMLStencilElement {
    }
    var HTMLVCalendarElement: {
        prototype: HTMLVCalendarElement;
        new (): HTMLVCalendarElement;
    };
    interface HTMLVCheckboxElement extends Components.VCheckbox, HTMLStencilElement {
    }
    var HTMLVCheckboxElement: {
        prototype: HTMLVCheckboxElement;
        new (): HTMLVCheckboxElement;
    };
    interface HTMLVCheckboxGroupElement extends Components.VCheckboxGroup, HTMLStencilElement {
    }
    var HTMLVCheckboxGroupElement: {
        prototype: HTMLVCheckboxGroupElement;
        new (): HTMLVCheckboxGroupElement;
    };
    interface HTMLVColElement extends Components.VCol, HTMLStencilElement {
    }
    var HTMLVColElement: {
        prototype: HTMLVColElement;
        new (): HTMLVColElement;
    };
    interface HTMLVCollapseElement extends Components.VCollapse, HTMLStencilElement {
    }
    var HTMLVCollapseElement: {
        prototype: HTMLVCollapseElement;
        new (): HTMLVCollapseElement;
    };
    interface HTMLVCollapseItemElement extends Components.VCollapseItem, HTMLStencilElement {
    }
    var HTMLVCollapseItemElement: {
        prototype: HTMLVCollapseItemElement;
        new (): HTMLVCollapseItemElement;
    };
    interface HTMLVDialogElement extends Components.VDialog, HTMLStencilElement {
    }
    var HTMLVDialogElement: {
        prototype: HTMLVDialogElement;
        new (): HTMLVDialogElement;
    };
    interface HTMLVDropdownElement extends Components.VDropdown, HTMLStencilElement {
    }
    var HTMLVDropdownElement: {
        prototype: HTMLVDropdownElement;
        new (): HTMLVDropdownElement;
    };
    interface HTMLVFormElement extends Components.VForm, HTMLStencilElement {
    }
    var HTMLVFormElement: {
        prototype: HTMLVFormElement;
        new (): HTMLVFormElement;
    };
    interface HTMLVFormItemElement extends Components.VFormItem, HTMLStencilElement {
    }
    var HTMLVFormItemElement: {
        prototype: HTMLVFormItemElement;
        new (): HTMLVFormItemElement;
    };
    interface HTMLVIconElement extends Components.VIcon, HTMLStencilElement {
    }
    var HTMLVIconElement: {
        prototype: HTMLVIconElement;
        new (): HTMLVIconElement;
    };
    interface HTMLVInputElement extends Components.VInput, HTMLStencilElement {
    }
    var HTMLVInputElement: {
        prototype: HTMLVInputElement;
        new (): HTMLVInputElement;
    };
    interface HTMLVKeyboardElement extends Components.VKeyboard, HTMLStencilElement {
    }
    var HTMLVKeyboardElement: {
        prototype: HTMLVKeyboardElement;
        new (): HTMLVKeyboardElement;
    };
    interface HTMLVListElement extends Components.VList, HTMLStencilElement {
    }
    var HTMLVListElement: {
        prototype: HTMLVListElement;
        new (): HTMLVListElement;
    };
    interface HTMLVMaskElement extends Components.VMask, HTMLStencilElement {
    }
    var HTMLVMaskElement: {
        prototype: HTMLVMaskElement;
        new (): HTMLVMaskElement;
    };
    interface HTMLVNavbarElement extends Components.VNavbar, HTMLStencilElement {
    }
    var HTMLVNavbarElement: {
        prototype: HTMLVNavbarElement;
        new (): HTMLVNavbarElement;
    };
    interface HTMLVNotifyElement extends Components.VNotify, HTMLStencilElement {
    }
    var HTMLVNotifyElement: {
        prototype: HTMLVNotifyElement;
        new (): HTMLVNotifyElement;
    };
    interface HTMLVPageElement extends Components.VPage, HTMLStencilElement {
    }
    var HTMLVPageElement: {
        prototype: HTMLVPageElement;
        new (): HTMLVPageElement;
    };
    interface HTMLVPanelElement extends Components.VPanel, HTMLStencilElement {
    }
    var HTMLVPanelElement: {
        prototype: HTMLVPanelElement;
        new (): HTMLVPanelElement;
    };
    interface HTMLVPopoverElement extends Components.VPopover, HTMLStencilElement {
    }
    var HTMLVPopoverElement: {
        prototype: HTMLVPopoverElement;
        new (): HTMLVPopoverElement;
    };
    interface HTMLVPopupElement extends Components.VPopup, HTMLStencilElement {
    }
    var HTMLVPopupElement: {
        prototype: HTMLVPopupElement;
        new (): HTMLVPopupElement;
    };
    interface HTMLVRadioElement extends Components.VRadio, HTMLStencilElement {
    }
    var HTMLVRadioElement: {
        prototype: HTMLVRadioElement;
        new (): HTMLVRadioElement;
    };
    interface HTMLVRadioGroupElement extends Components.VRadioGroup, HTMLStencilElement {
    }
    var HTMLVRadioGroupElement: {
        prototype: HTMLVRadioGroupElement;
        new (): HTMLVRadioGroupElement;
    };
    interface HTMLVRangeElement extends Components.VRange, HTMLStencilElement {
    }
    var HTMLVRangeElement: {
        prototype: HTMLVRangeElement;
        new (): HTMLVRangeElement;
    };
    interface HTMLVRateElement extends Components.VRate, HTMLStencilElement {
    }
    var HTMLVRateElement: {
        prototype: HTMLVRateElement;
        new (): HTMLVRateElement;
    };
    interface HTMLVRowElement extends Components.VRow, HTMLStencilElement {
    }
    var HTMLVRowElement: {
        prototype: HTMLVRowElement;
        new (): HTMLVRowElement;
    };
    interface HTMLVScrollViewElement extends Components.VScrollView, HTMLStencilElement {
    }
    var HTMLVScrollViewElement: {
        prototype: HTMLVScrollViewElement;
        new (): HTMLVScrollViewElement;
    };
    interface HTMLVSpaceElement extends Components.VSpace, HTMLStencilElement {
    }
    var HTMLVSpaceElement: {
        prototype: HTMLVSpaceElement;
        new (): HTMLVSpaceElement;
    };
    interface HTMLVStickyElement extends Components.VSticky, HTMLStencilElement {
    }
    var HTMLVStickyElement: {
        prototype: HTMLVStickyElement;
        new (): HTMLVStickyElement;
    };
    interface HTMLVSwiperElement extends Components.VSwiper, HTMLStencilElement {
    }
    var HTMLVSwiperElement: {
        prototype: HTMLVSwiperElement;
        new (): HTMLVSwiperElement;
    };
    interface HTMLVSwiperItemElement extends Components.VSwiperItem, HTMLStencilElement {
    }
    var HTMLVSwiperItemElement: {
        prototype: HTMLVSwiperItemElement;
        new (): HTMLVSwiperItemElement;
    };
    interface HTMLVSwitchElement extends Components.VSwitch, HTMLStencilElement {
    }
    var HTMLVSwitchElement: {
        prototype: HTMLVSwitchElement;
        new (): HTMLVSwitchElement;
    };
    interface HTMLVTabElement extends Components.VTab, HTMLStencilElement {
    }
    var HTMLVTabElement: {
        prototype: HTMLVTabElement;
        new (): HTMLVTabElement;
    };
    interface HTMLVTabbarElement extends Components.VTabbar, HTMLStencilElement {
    }
    var HTMLVTabbarElement: {
        prototype: HTMLVTabbarElement;
        new (): HTMLVTabbarElement;
    };
    interface HTMLVTableElement extends Components.VTable, HTMLStencilElement {
    }
    var HTMLVTableElement: {
        prototype: HTMLVTableElement;
        new (): HTMLVTableElement;
    };
    interface HTMLVTextElement extends Components.VText, HTMLStencilElement {
    }
    var HTMLVTextElement: {
        prototype: HTMLVTextElement;
        new (): HTMLVTextElement;
    };
    interface HTMLVTitleElement extends Components.VTitle, HTMLStencilElement {
    }
    var HTMLVTitleElement: {
        prototype: HTMLVTitleElement;
        new (): HTMLVTitleElement;
    };
    interface HTMLVToastElement extends Components.VToast, HTMLStencilElement {
    }
    var HTMLVToastElement: {
        prototype: HTMLVToastElement;
        new (): HTMLVToastElement;
    };
    interface HTMLElementTagNameMap {
        "v-actionsheet": HTMLVActionsheetElement;
        "v-button": HTMLVButtonElement;
        "v-calendar": HTMLVCalendarElement;
        "v-checkbox": HTMLVCheckboxElement;
        "v-checkbox-group": HTMLVCheckboxGroupElement;
        "v-col": HTMLVColElement;
        "v-collapse": HTMLVCollapseElement;
        "v-collapse-item": HTMLVCollapseItemElement;
        "v-dialog": HTMLVDialogElement;
        "v-dropdown": HTMLVDropdownElement;
        "v-form": HTMLVFormElement;
        "v-form-item": HTMLVFormItemElement;
        "v-icon": HTMLVIconElement;
        "v-input": HTMLVInputElement;
        "v-keyboard": HTMLVKeyboardElement;
        "v-list": HTMLVListElement;
        "v-mask": HTMLVMaskElement;
        "v-navbar": HTMLVNavbarElement;
        "v-notify": HTMLVNotifyElement;
        "v-page": HTMLVPageElement;
        "v-panel": HTMLVPanelElement;
        "v-popover": HTMLVPopoverElement;
        "v-popup": HTMLVPopupElement;
        "v-radio": HTMLVRadioElement;
        "v-radio-group": HTMLVRadioGroupElement;
        "v-range": HTMLVRangeElement;
        "v-rate": HTMLVRateElement;
        "v-row": HTMLVRowElement;
        "v-scroll-view": HTMLVScrollViewElement;
        "v-space": HTMLVSpaceElement;
        "v-sticky": HTMLVStickyElement;
        "v-swiper": HTMLVSwiperElement;
        "v-swiper-item": HTMLVSwiperItemElement;
        "v-switch": HTMLVSwitchElement;
        "v-tab": HTMLVTabElement;
        "v-tabbar": HTMLVTabbarElement;
        "v-table": HTMLVTableElement;
        "v-text": HTMLVTextElement;
        "v-title": HTMLVTitleElement;
        "v-toast": HTMLVToastElement;
    }
}
declare namespace LocalJSX {
    interface VActionsheet {
    }
    interface VButton {
        "conner"?: boolean;
        "outline"?: boolean;
        "rounder"?: boolean;
        "type"?: string;
    }
    interface VCalendar {
    }
    interface VCheckbox {
    }
    interface VCheckboxGroup {
    }
    interface VCol {
        "span"?: number;
    }
    interface VCollapse {
    }
    interface VCollapseItem {
    }
    interface VDialog {
    }
    interface VDropdown {
    }
    interface VForm {
    }
    interface VFormItem {
    }
    interface VIcon {
        "color"?: string;
        "name"?: string;
        "path"?: string;
        "size"?: number;
        "view"?: number;
    }
    interface VInput {
    }
    interface VKeyboard {
    }
    interface VList {
    }
    interface VMask {
    }
    interface VNavbar {
    }
    interface VNotify {
    }
    interface VPage {
    }
    interface VPanel {
    }
    interface VPopover {
    }
    interface VPopup {
    }
    interface VRadio {
        "checked"?: boolean;
        "onVchange"?: (event: CustomEvent<any>) => void;
        "value"?: string;
    }
    interface VRadioGroup {
        "onVchange"?: (event: CustomEvent<any>) => void;
        "value"?: any;
    }
    interface VRange {
    }
    interface VRate {
    }
    interface VRow {
        "gutter"?: number;
    }
    interface VScrollView {
    }
    interface VSpace {
    }
    interface VSticky {
    }
    interface VSwiper {
    }
    interface VSwiperItem {
    }
    interface VSwitch {
    }
    interface VTab {
    }
    interface VTabbar {
    }
    interface VTable {
    }
    interface VText {
    }
    interface VTitle {
    }
    interface VToast {
    }
    interface IntrinsicElements {
        "v-actionsheet": VActionsheet;
        "v-button": VButton;
        "v-calendar": VCalendar;
        "v-checkbox": VCheckbox;
        "v-checkbox-group": VCheckboxGroup;
        "v-col": VCol;
        "v-collapse": VCollapse;
        "v-collapse-item": VCollapseItem;
        "v-dialog": VDialog;
        "v-dropdown": VDropdown;
        "v-form": VForm;
        "v-form-item": VFormItem;
        "v-icon": VIcon;
        "v-input": VInput;
        "v-keyboard": VKeyboard;
        "v-list": VList;
        "v-mask": VMask;
        "v-navbar": VNavbar;
        "v-notify": VNotify;
        "v-page": VPage;
        "v-panel": VPanel;
        "v-popover": VPopover;
        "v-popup": VPopup;
        "v-radio": VRadio;
        "v-radio-group": VRadioGroup;
        "v-range": VRange;
        "v-rate": VRate;
        "v-row": VRow;
        "v-scroll-view": VScrollView;
        "v-space": VSpace;
        "v-sticky": VSticky;
        "v-swiper": VSwiper;
        "v-swiper-item": VSwiperItem;
        "v-switch": VSwitch;
        "v-tab": VTab;
        "v-tabbar": VTabbar;
        "v-table": VTable;
        "v-text": VText;
        "v-title": VTitle;
        "v-toast": VToast;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "v-actionsheet": LocalJSX.VActionsheet & JSXBase.HTMLAttributes<HTMLVActionsheetElement>;
            "v-button": LocalJSX.VButton & JSXBase.HTMLAttributes<HTMLVButtonElement>;
            "v-calendar": LocalJSX.VCalendar & JSXBase.HTMLAttributes<HTMLVCalendarElement>;
            "v-checkbox": LocalJSX.VCheckbox & JSXBase.HTMLAttributes<HTMLVCheckboxElement>;
            "v-checkbox-group": LocalJSX.VCheckboxGroup & JSXBase.HTMLAttributes<HTMLVCheckboxGroupElement>;
            "v-col": LocalJSX.VCol & JSXBase.HTMLAttributes<HTMLVColElement>;
            "v-collapse": LocalJSX.VCollapse & JSXBase.HTMLAttributes<HTMLVCollapseElement>;
            "v-collapse-item": LocalJSX.VCollapseItem & JSXBase.HTMLAttributes<HTMLVCollapseItemElement>;
            "v-dialog": LocalJSX.VDialog & JSXBase.HTMLAttributes<HTMLVDialogElement>;
            "v-dropdown": LocalJSX.VDropdown & JSXBase.HTMLAttributes<HTMLVDropdownElement>;
            "v-form": LocalJSX.VForm & JSXBase.HTMLAttributes<HTMLVFormElement>;
            "v-form-item": LocalJSX.VFormItem & JSXBase.HTMLAttributes<HTMLVFormItemElement>;
            "v-icon": LocalJSX.VIcon & JSXBase.HTMLAttributes<HTMLVIconElement>;
            "v-input": LocalJSX.VInput & JSXBase.HTMLAttributes<HTMLVInputElement>;
            "v-keyboard": LocalJSX.VKeyboard & JSXBase.HTMLAttributes<HTMLVKeyboardElement>;
            "v-list": LocalJSX.VList & JSXBase.HTMLAttributes<HTMLVListElement>;
            "v-mask": LocalJSX.VMask & JSXBase.HTMLAttributes<HTMLVMaskElement>;
            "v-navbar": LocalJSX.VNavbar & JSXBase.HTMLAttributes<HTMLVNavbarElement>;
            "v-notify": LocalJSX.VNotify & JSXBase.HTMLAttributes<HTMLVNotifyElement>;
            "v-page": LocalJSX.VPage & JSXBase.HTMLAttributes<HTMLVPageElement>;
            "v-panel": LocalJSX.VPanel & JSXBase.HTMLAttributes<HTMLVPanelElement>;
            "v-popover": LocalJSX.VPopover & JSXBase.HTMLAttributes<HTMLVPopoverElement>;
            "v-popup": LocalJSX.VPopup & JSXBase.HTMLAttributes<HTMLVPopupElement>;
            "v-radio": LocalJSX.VRadio & JSXBase.HTMLAttributes<HTMLVRadioElement>;
            "v-radio-group": LocalJSX.VRadioGroup & JSXBase.HTMLAttributes<HTMLVRadioGroupElement>;
            "v-range": LocalJSX.VRange & JSXBase.HTMLAttributes<HTMLVRangeElement>;
            "v-rate": LocalJSX.VRate & JSXBase.HTMLAttributes<HTMLVRateElement>;
            "v-row": LocalJSX.VRow & JSXBase.HTMLAttributes<HTMLVRowElement>;
            "v-scroll-view": LocalJSX.VScrollView & JSXBase.HTMLAttributes<HTMLVScrollViewElement>;
            "v-space": LocalJSX.VSpace & JSXBase.HTMLAttributes<HTMLVSpaceElement>;
            "v-sticky": LocalJSX.VSticky & JSXBase.HTMLAttributes<HTMLVStickyElement>;
            "v-swiper": LocalJSX.VSwiper & JSXBase.HTMLAttributes<HTMLVSwiperElement>;
            "v-swiper-item": LocalJSX.VSwiperItem & JSXBase.HTMLAttributes<HTMLVSwiperItemElement>;
            "v-switch": LocalJSX.VSwitch & JSXBase.HTMLAttributes<HTMLVSwitchElement>;
            "v-tab": LocalJSX.VTab & JSXBase.HTMLAttributes<HTMLVTabElement>;
            "v-tabbar": LocalJSX.VTabbar & JSXBase.HTMLAttributes<HTMLVTabbarElement>;
            "v-table": LocalJSX.VTable & JSXBase.HTMLAttributes<HTMLVTableElement>;
            "v-text": LocalJSX.VText & JSXBase.HTMLAttributes<HTMLVTextElement>;
            "v-title": LocalJSX.VTitle & JSXBase.HTMLAttributes<HTMLVTitleElement>;
            "v-toast": LocalJSX.VToast & JSXBase.HTMLAttributes<HTMLVToastElement>;
        }
    }
}
